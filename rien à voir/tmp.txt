  # Exercice n°1: 
  ## 1)
  ### a.
  M = matrix(c(4,-1,-1,0,0,3,-1,0,0,-1,3,0,2,-1,-1,2), nrow = 4)
  N = matrix(c(3,1,0,0,-4,-1,0,0,7,1,2,1,-17,-6,-1,0), nrow = 4)
  
  ### b.
  P = eigen(M)$vectors
  D = diag(eigen(M)$values)
  
  ### c.
  Pn = solve(P)
  all.equal(P%*%D%*%Pn,M)
  
  ## 2)
  det(eigen(N)$vectors)
  
  # Exercice n°2: 
  ## 1)
  T = read.table("animal.csv", sep=",", dec=".", header=TRUE)
  mean(T$x)
  mean(T$y)
  mean(T$z)
  sd(T$x)
  sd(T$y)
  sd(T$z)
  
  ## 2)
  #\ Non car les écarts-types ne sont pas proche de 0
  
  # Exercice n°3:
  ## 1)
  plot(T$x, T$y)
  plot(T$x, T$z)
  plot(T$y, T$z)
  #\ D'après moi, tous les graphiques donnent le même nombre d'informations mais dans le plan (xOy) les informations sont mieux centrées
  
  ## 2)
  var(T$x, T$y)
  var(T$x, T$z)
  var(T$y, T$z)
  #\ Je remarque que au final le plan donnant le plus d'informations est celui dans le plan (yOz)
  
  # Exercice n°4:
  ## 1)
  var_droite <- function(a,b,c) {
    V <- a*T[,'x']+b*T[,'y']+c*T[,'z']
    norm <- (a^2+b^2+c^2)^.5
    V <- V / norm
    return(var(V))
}
  
  
  tirage1 <- function(n) {
    m <- 0
    for(k in 1:n) {
      u <- runif(3, -1, 1)
      a <- u[1]
      b <- u[2]
      c <- u[3]
      norm <- sqrt(a^2+b^2+c^2)
      V <- var_droite(a, b, c)
      if (V > m) {
        m <- V
        a0 <- a
        b0 <- b
        c0 <- c
      }
    }
    return(c(a0/norm, b0/norm, c0/norm, m))
  }

  ## 2) 
  #\ tirage1(10000) = [0.09773336, -0.26165513, 0.42902495, 144.72907479]

  # Exercice n°5:
  ## 1)
  tirage2 <- function(n) {
    m <- 0
    res <- tirage1(n)
    for (k in 1:n) {
      u <- runif(3, -1, 1)
      a <- u[1]
      b <- u[2]
      c <- -((a*res[1]+b*res[2])/res[3])
      norm <- sqrt(a^2+b^2+c^2)
      V <- var_droite(a, b, c)
      if (V > m) {
        m <- V
        a1 <- a
        b1 <- b
        c1 <- c
        T$yi <- c
      }
    }
    return(c(a1/norm, b1/norm, c1/norm, m))
  }
  
  ## 2)
  #\ tirage2(10000) = [-0.1302546, 0.1350871, 0.1128151, 24.5849343]

  # Exercice n°6:
  ## 1)
  T$xi <- tirage1(10000)[4]
  T$yi <- tirage2(10000)[4]
  
